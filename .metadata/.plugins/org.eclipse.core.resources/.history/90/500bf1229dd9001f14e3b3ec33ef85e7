package com.estorebookshop.controller.user;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.estorebookshop.config.model.CustomUserDetails;
import com.estorebookshop.model.Order;
import com.estorebookshop.model.OrderDetail;
import com.estorebookshop.model.User;
import com.estorebookshop.service.OrderDetailService;
import com.estorebookshop.service.OrderService;
import com.estorebookshop.service.UserService;

@Controller
@RequestMapping("/user/order")
public class MyOrderController {
	
	@Autowired
	private OrderService orderService;
	
	@Autowired
	private OrderDetailService orderDetailService;
	
	@Autowired
	private UserService userService;
	
	@RequestMapping("")
	public String cart(Model model, RedirectAttributes redirectAttributes) {

		Object principal = SecurityContextHolder.getContext().getAuthentication().getPrincipal();
		String username;
		if (principal instanceof CustomUserDetails) {
			username = ((CustomUserDetails) principal).getUsername();
		} else {
			username = principal.toString();
		}

		User user = this.userService.findByUsername(username);

		List<Order> orders = this.orderService.findByUser(user);
		model.addAttribute("orders", orders);

		return "user/order";

	}
	
	@GetMapping("/order-detail/{id}")
	public String orderDetail(@PathVariable("id") Long orderId, Model model) {
		
		List<OrderDetail> orderDetails = orderDetailService.findAllByOrderId(orderId);

		// Gửi dữ liệu vào view
		model.addAttribute("order", this.orderService.findById(orderId));
		model.addAttribute("orderDetails", orderDetails);

		return "user/order-detail";
	}
	
	@GetMapping("/cancel/{id}")
	public String cancel(@PathVariable("id") Long orderId, Model model) {
		
		Order order = this.orderService.findById(orderId);
		order.setStatus("Cancelled");
		this.orderService.save(order);
		
		return "redirect:/user/order/order-detail/" + orderId;
	}

}
