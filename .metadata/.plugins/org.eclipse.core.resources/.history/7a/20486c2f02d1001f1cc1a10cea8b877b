package com.estorebookshop.service.implement;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageImpl;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;

import com.estorebookshop.model.User;
import com.estorebookshop.repository.UserRepository;
import com.estorebookshop.service.UserService;

@Service
public class UserServiceImpl implements UserService {

	@Autowired
	private UserRepository userRepository;

	@Override
	public User findByUsername(String username) {
		// TODO Auto-generated method stub
		return this.userRepository.findByUsername(username);
	}

	@Override
	public User findById(Long id) {
		// TODO Auto-generated method stub
		return this.userRepository.findById(id).orElse(null);
	}

	@Override
	public User save(User user) {
		// TODO Auto-generated method stub
		return this.userRepository.save(user);
	}

	@Override
	public List<User> findByKeyword(String keyword) {
		// TODO Auto-generated method stub
		return this.userRepository.findByKeyword(keyword);
	}

	@Override
	public Page<User> findAll(Integer pageno) {
		// TODO Auto-generated method stub
		Pageable pageable = PageRequest.of(pageno - 1, 5);
		return this.userRepository.findAll(pageable);
	}

	@Override
	public Page<User> findByKeyword(String keyword, Integer pageNo) {
	    // Lấy danh sách người dùng từ repository
	    List<User> list = this.userRepository.findByKeyword(keyword);
	    
	    // Kiểm tra nếu danh sách là null hoặc rỗng
	    if (list == null) {
	        list = new ArrayList<User>();
	    }

	    // Tạo Pageable cho phân trang
	    Pageable pageable = PageRequest.of(pageNo - 1, 5);
	    
	    // Tính toán chỉ số bắt đầu và kết thúc của phân trang
	    Integer start = (int) pageable.getOffset();
	    Integer end = Math.min((start + pageable.getPageSize()), list.size());
	    
	    // Cắt danh sách theo phân trang
	    list = list.subList(start, end);

	    // Trả về PageImpl với tổng số phần tử là kích thước của danh sách (hoặc sử dụng countByKeyword nếu có)
	    return new PageImpl<>(list, pageable, list.size());
	}
	
}
